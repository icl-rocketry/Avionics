// Stream& input;



DynamicJsonDocument doc(3072);

DeserializationError error = deserializeJson(doc, input);

if (error) {
  Serial.print(F("deserializeJson() failed: "));
  Serial.println(error.f_str());
  return;
}

JsonObject Parameters = doc["Parameters"];
long Parameters_SerialBaud = Parameters["SerialBaud"]; // 42069
bool Parameters_Groundstation = Parameters["Groundstation"]; // true
int Parameters_LaunchAccelerationThreshold = Parameters["LaunchAccelerationThreshold"]; // 420

JsonArray Parameters_FlightPathPolynomial = Parameters["FlightPathPolynomial"];
int Parameters_FlightPathPolynomial_0 = Parameters_FlightPathPolynomial[0]; // 4
int Parameters_FlightPathPolynomial_1 = Parameters_FlightPathPolynomial[1]; // 2
int Parameters_FlightPathPolynomial_2 = Parameters_FlightPathPolynomial[2]; // 0
int Parameters_FlightPathPolynomial_3 = Parameters_FlightPathPolynomial[3]; // 6
int Parameters_FlightPathPolynomial_4 = Parameters_FlightPathPolynomial[4]; // 9

int Parameters_Cd_0 = Parameters["Cd"][0]; // 12

for (JsonObject elem : doc["Networking"]["RoutingTable"].as<JsonArray>()) {

  int SourceNode = elem["SourceNode"]; // 0, 1

  for (JsonObject elem : elem["entries"].as<JsonArray>()) {

    int DestinationNode = elem["DestinationNode"]; // 0, 1, 2, 3, 4
    int Interface = elem["Interface"]; // 0, 1, 1, 3, 2
    int Metric = elem["Metric"]; // 0, 1, 2, 1, 1
    const char* Address = elem["Address"]; // "Null", "Null", "Null", "Null", "Null"

  }

}

JsonObject Pyros_0 = doc["Pyros"][0];
const char* Pyros_0_type = Pyros_0["type"]; // "bt"
const char* Pyros_0_address = Pyros_0["address"]; // "0x69696969"
int Pyros_0_fire_duration = Pyros_0["fire_duration"]; // 1000

JsonObject Pyros_1 = doc["Pyros"][1];
const char* Pyros_1_type = Pyros_1["type"]; // "local"
int Pyros_1_fire_pin = Pyros_1["fire_pin"]; // 10
int Pyros_1_continuity_pin = Pyros_1["continuity_pin"]; // 11
long Pyros_1_fire_duration = Pyros_1["fire_duration"]; // 69420

const char* Engine_0_type = doc["Engine"][0]["type"]; // "solid"
int Engine_0_interface = doc["Engine"][0]["interface"]; // 0

JsonObject Events_0 = doc["Events"][0];
const char* Events_0_type = Events_0["type"]; // "engine"
int Events_0_interface = Events_0["interface"]; // 0
bool Events_0_single_fire = Events_0["single_fire"]; // true

JsonObject Events_0_condition = Events_0["condition"];
const char* Events_0_condition_operator = Events_0_condition["operator"]; // "AND"

JsonObject Events_0_condition_condition1 = Events_0_condition["condition1"];
const char* Events_0_condition_condition1_flightVar = Events_0_condition_condition1["flightVar"];
const char* Events_0_condition_condition1_operator = Events_0_condition_condition1["operator"]; // "LT"
int Events_0_condition_condition1_threshold = Events_0_condition_condition1["threshold"]; // 420

JsonObject Events_0_condition_condition2 = Events_0_condition["condition2"];
const char* Events_0_condition_condition2_flightVar = Events_0_condition_condition2["flightVar"];
const char* Events_0_condition_condition2_operator = Events_0_condition_condition2["operator"]; // "GT"
int Events_0_condition_condition2_threshold = Events_0_condition_condition2["threshold"]; // 69

JsonObject Events_1 = doc["Events"][1];
const char* Events_1_type = Events_1["type"]; // "pyro"
const char* Events_1_interface = Events_1["interface"]; // "0"
bool Events_1_single_fire = Events_1["single_fire"]; // true

JsonObject Events_1_condition = Events_1["condition"];
const char* Events_1_condition_flightVar = Events_1_condition["flightVar"]; // "Acceleration"
const char* Events_1_condition_operator = Events_1_condition["operator"]; // "LT"
int Events_1_condition_threshold = Events_1_condition["threshold"]; // -420
